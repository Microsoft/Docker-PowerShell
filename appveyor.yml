version: '0.0.0.{build}'
pull_requests:
  do_not_increment_build_number: true
image: WMF 5
init:
- ps: (new-object net.webclient).DownloadFile('https://dotnetcli.blob.core.windows.net/dotnet/beta/Installers/Latest/dotnet-dev-win-x64.latest.exe', "c:/dotnet-install.exe")
- ps: Start-Process c:\dotnet-install.exe -ArgumentList "/install","/quiet" -Wait
- ps: Install-PackageProvider NuGet -Force
- ps: Install-Module PlatyPS -Force
install:
- cmd: git submodule update --init --recursive
nuget:
  disable_publish_on_pr: true
build_script:
- ps: |
    $env:PATH = "c:\program files\dotnet;$env:PATH"

    $version = $env:APPVEYOR_BUILD_VERSION
    if ($env:APPVEYOR_REPO_TAG -eq "true") {
      # Tags do not get build versions.
      $version = $version.Remove($version.LastIndexOf(".")) + ".0"
    }

    # PowerShell does not support prerelease versions
    $psversion = $version.Split("-")[0]

    $projectFile = "src\Docker.PowerShell\project.json"
    $project =  Get-Content $projectFile -Raw | ConvertFrom-Json
    $project.version = $version
    ConvertTo-Json $project | Out-File -Encoding UTF8 $projectFile

    $manifest = "src\Docker.PowerShell\Docker.psd1"
    (Get-Content $manifest -Raw) -replace "ModuleVersion.+","ModuleVersion = '$psversion'" | Out-File $manifest
- ps: dotnet restore
- ps: dotnet publish -r win -o bin -c Release src/Docker.PowerShell
- ps: New-ExternalHelp -Path src/Docker.PowerShell/Help -OutputPath bin
- ps: nuget pack src/Docker.PowerShell/Docker.nuspec -BasePath bin -OutputDirectory bin -Symbols -Version $psversion
test_script:
- ps: Register-PSRepository -Name test -SourceLocation $pwd\bin
- ps: Install-Module -Name Docker -Repository test -Force
- ps: Import-Module Docker
artifacts:
- path: bin/*.nupkg
